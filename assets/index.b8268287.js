import{a as t,J as e,l as a,y as i,N as s}from"./vendor.87791f12.js";function n({data:e,title:a}){return t("div",{class:"tick-graph",style:`--max-value: ${Math.max(...e)}`},e.map((e=>t("div",{class:"tick-value",style:`--value: ${e};`}))),a&&t("span",{class:"tick-title"},a),t("span",{class:"tick-info"},"avg: ",Math.round(e.reduce(((t,e)=>t+e))/e.length)))}const r={x:t("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:"16",height:"16"},t("path",{"fill-rule":"evenodd",d:"M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"}))};var c;function l(){const[e,s]=a([]),[l,o]=a(0),p=e[l];return t("main",{onDrop:async t=>{if(t.preventDefault(),t.dataTransfer)for(let a=0;a<t.dataTransfer.files.length;a++){const i=t.dataTransfer.files[a];if(i.type.match(/^application\/(x-)?zip(-compressed)?$/)){const t=await c.fromZip(i),a=e.findIndex((e=>e.name===t.name));a>=0?o(a):(console.log(t.name,t),s([...e,t]))}}},onDragOver:t=>t.preventDefault()},0===e.length?t(i,null,t("div",{class:"drop"},t("h1",null,"Drop profiling report here"),t("p",null,"Singleplayer: F3 + L"),t("p",null,"Multiplayer: /perf start"),t("p",null,"Located in .minecraft/debug/profiling/"))):t(i,null,t("ul",{class:"tabs"},e.map(((a,i)=>t("li",{class:"tab"+(l===i?" active":""),onClick:()=>o(i),title:a.name},t("div",{class:"tab-name"},a.name),t("button",{class:"tab-remove",onClick:()=>{return t=i,void s(e.filter(((e,a)=>a!==t)));var t}},r.x))))),t("div",{class:"report"},t(n,{data:p.server.stats.tickTimes.map((t=>Math.round(t/1e6))),title:"Tick times"}),t(n,{data:p.server.metrics.ticking.map((t=>t.tickTime)),title:"Server metrics"}),t(n,{data:p.client.metrics.ticking.map((t=>t.tickTime)),title:"Client metrics"}))))}!function(t){async function a(t,e){const[a,...i]=await s(t,e),n=a.split(",").map((t=>t.trim()));return i.map((t=>Object.fromEntries(t.split(",").map(((t,e)=>[n[e],t.trim()])))))}async function i(t,e,a=":"){const i=await s(t,e);return Object.fromEntries(i.filter((t=>t.includes(a))).map((t=>{const[e,...i]=t.split(a);return[e,i.join(a).trim()]})))}async function s(t,e){const a=t.files[e];if(!a)throw new Error(`Cannot find "${e}"`);return(await a.async("text")).trimEnd().split("\n")}(c||(c={})).fromZip=async function(t){const s=await t.arrayBuffer(),n=await e.loadAsync(s),r=await a(n,"client/metrics/ticking.csv"),c=await i(n,"client/options.txt"),l=await a(n,"server/metrics/ticking.csv"),o=await i(n,"server/gamerules.txt","="),p=await i(n,"server/stats.txt"),m=await i(n,"system.txt"),u=Object.keys(n.files).filter((t=>t.match(/^server\/levels\/[a-z0-9_-]+\/[a-z0-9_-]+\/$/))),d=await Promise.all(u.map((t=>async function(t,e){const s=await a(t,`${e}block_entities.csv`),n=await a(t,`${e}chunks.csv`),r=await a(t,`${e}entities.csv`),c=await a(t,`${e}entity_chunks.csv`),l=await i(t,`${e}stats.txt`),o=l.entities.split(",").map((t=>parseInt(t)));return{blockEntities:s.map((t=>({x:parseFloat(t.x),y:parseFloat(t.y),z:parseFloat(t.z),type:t.type}))),chunks:n.map((t=>({x:parseInt(t.x),z:parseInt(t.z),level:parseInt(t.level),inMemory:"true"===t.in_memory,status:t.status,fullStatus:t.full_status,accessibleReady:t.accessible_ready,tickingReady:t.ticking_ready,entityTickingReady:t.entity_ticking_ready,spawning:"true"===t.spawning,blockEntityCount:parseInt(t.block_entity_count)}))),entities:r.map((t=>({x:parseFloat(t.x),y:parseFloat(t.y),z:parseFloat(t.z),uuid:t.uuid,type:t.type,alive:"true"===t.alive,displayName:t.display_name,customName:"[null]"===t.custom_name?null:t.custom_name}))),entityChunks:c.map((t=>({x:parseFloat(t.x),y:parseFloat(t.y),z:parseFloat(t.z),visibility:t.visibility,loadStatus:t.load_status,entityCount:parseInt(t.entity_count)}))),stats:{spawningChunks:parseInt(l.spawning_chunks),entities:{knownUuids:o[0],visibleEntityStorage:o[1],sectionStorage:o[2],chunkLoadStatuses:o[3],chunkVisibility:o[4],loadingInbox:o[5],chunksToUnload:o[6]},blockEntityTickers:parseInt(l.block_entity_tickers),blockTicks:parseInt(l.block_ticks),fluidTicks:parseInt(l.fluid_ticks),pendingTasks:parseInt(l.pending_tasks)}}}(n,t))));return{name:t.name.replace(/\.zip$/,""),client:{metrics:{ticking:r.map((t=>({tick:parseInt(t["@tick"]),tickTime:Number(t.ticktime)})))},options:c},server:{levels:Object.fromEntries(u.map(((t,e)=>[t.replace(/^server\/levels\/([a-z0-9_-]+)\/([a-z0-9_-]+)\/$/,"$1:$2"),d[e]]))),metrics:{ticking:l.map((t=>({tick:parseInt(t["@tick"]),tickTime:Number(t.ticktime)})))},gamerules:o,stats:{pendingTasks:parseInt(p.pending_tasks),averageTickTime:parseFloat(p.average_tick_time),tickTimes:JSON.parse(p.tick_times)}},system:{versionName:m["Minecraft Version"],versionId:m["Minecraft Version ID"],isModded:!m["Is Modded"].startsWith("Probably not."),operatingSystem:m["Operating System"],windowSize:m["Window size"],resourcePacks:m["Resource Packs"].split(",").map((t=>t.trim())),dataPacks:m["Data Packs"].split(",").map((t=>t.trim()))}}}}();s(t(l,null),document.body);
